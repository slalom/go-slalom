# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # versioning
  Major: 1
  Minor: 0

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '59f018ba-85e7-40e4-aa34-07a601ee7285'
  imageRepository: 'goslalom'
  containerRegistry: 'goslalom.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Major).$(Minor).$(Build.BuildID)'
  
  # Kubernetes Namespace
  k8sNamespace: 'go-slalom-dev'
  imagePullSecret: 'goslalom77be-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: PullRequest
  displayName: Pull Request stage
  # only run for feature branches
  condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
  jobs:
    - job: UnitTest
      displayName: 'Run Unit Tests'
      pool:
        vmImage: $(vmImageName)
      steps:          
      - script: |
          mkdir -p '$(GOBIN)'
          mkdir -p '$(GOPATH)/pkg'
          mkdir -p '$(modulePath)'
          shopt -s extglob
          mv !(gopath) '$(modulePath)'
          echo '##vso[task.prependpath]$(GOBIN)'
          echo '##vso[task.prependpath]$(GOROOT)/bin'
        displayName: 'Set up the Go workspace'
      - script: go test -v ./...
        workingDirectory: '$(modulePath)'
        displayName: 'Run tests'

- stage: Build
  displayName: Build stage
  # only run for master
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  jobs:  
  - job: Build
    displayName: Build job
    pool:
      vmImage: $(vmImageName)
    steps:
    # tag and create pre-release
    - task: GitHubRelease@0
      displayName: 'Tag Pre-Release'
      inputs:
        gitHubConnection: 'go-slalom token'
        repositoryName: '$(Build.Repository.Name)'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'manual'
        isPreRelease: true
        tag: $(tag)

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'manifests'
        targetPath: 'manifests'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    pool:
      vmImage: $(vmImageName)
    environment: 'slalomgoslalom.go-slalom-dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@1
            inputs:
              artifactName: 'manifests'
              downloadPath: '$(System.ArtifactsDirectory)/manifests'

          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              namespace: $(k8sNamespace)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(k8sNamespace)
              manifests: |
                $(System.ArtifactsDirectory)/manifests/deployment.yml
                $(System.ArtifactsDirectory)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
